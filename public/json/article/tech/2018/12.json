{"id":12,"title":"macOS安装PHP+MySQL+Nginx+Composer环境","subTitle":"生产力工具配置","link":null,"description":"斥巨资新买了电脑，记录一下配置过程~~开心心~~","content":"> 注意：不要去删除系统自带的Apache 和php 我开始就删除了系统自带的Apache，导致后面php一直无法安装成功，重装了Apache后才弄好，所以建议不要轻易删除系统自带的Apache和php，高手另说。\n\n\n## 一、安装 homebrew\nhomebrew是mac系统下特别好用的一个软件包工具，而且它的安装也是极为简单。\n\n网上有很多人直接给出了homebrew的安装命令，但是大部分的地址已经失效。在homebrew网站上 http://brew.sh/ ，正中间就是homebrew的安装命令，直接复制到你的终端里执行就可以了。\n\n``` bash\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\nhomebrew安装完成了，我们再用brew来安装Nginx，有了brew后，安装就变得很简单了，不需要自己去make之类的。\n\n## 二、安装 MySql\n\n``` bash\nbrew install mysql\n```\n\n也是一句命令搞定，等执行完后，mysql也安装完毕，接下来就是对mysql的一些配置\n\n### 1、先cd到mysql的目录中\n\n``` bash\ncd /usr/local/opt/mysql/\n```\n\n### 2、加入launchctl启动控制\n\n``` bash\nmkdir -p ~/Library/LaunchAgents/\n\ncp /usr/local/opt/mysql/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/\n\nlaunchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist\n\n#取消启动的命令\nlaunchctl unload ~/Library/LaunchAgents/homebrew.mxcl.mysql.plis\n```\n\n### 3、执行安全设置脚本,设置root账号密码,如果不执行这一步，是无法用`mysql -u root -p`这个命令登录mysql的\n\n``` bash\n./bin/mysql_secure_installation\n```\n\n执行上面的命令后，会进入mysql的配置,可以用`mysql -u root -p`来登录mysql\n\n> **注意：在navicat premium 12 & Mysql 8.0.11下连接报错**\n\n使用Navicat 12远程连接Mysql 8.0.11时会提示如下报错信息，从错误信息可知`caching_sha2_password`不能加载。\n\n```bash\n2059 - Authentication plugin 'caching_sha2_password' cannot be loaded\n```\n\n以上报错是由于目前已有的客户端连接软件还不支持Mysql8新增加的加密方式`caching_sha2_password`，所以我们需要修改用户的加密方式，将其改为老的加密验证方式:\n\n- 1） 在安装Mysql数据库的主机上登录Mysql对应的用户，上面连接时用的用户为root，所以我们登录root用户。\n\n- 2）执行命令，查看当前用户的加密方式\n\n``` bash\nuse mysql;\n\nselect user,plugin from user where user='root';\n# 可以看到当前用户的加密方式为caching_sha2_password\n```\n\n- 3）执行命令，将用户的加密方式改为`mysql_native_password`\n\n``` bash\nalter user 'root'@'localhost' identified with mysql_native_password by 'password';\n```\n\n- 4）执行命令`flush privileges`使权限配置项立即生效。\n\n\n## 三、安装nginx\n\n``` bash\nbrew install nginx\n```\n\n### 1、配置nginx\n\n#### 1-1 给nginx 设置管理员权限：如果不设置管理员权限，80端口是不能监听的\n\n``` bash\n#这里的目录根据你实际安装的目录来填写，默认是这个目录，不同的只是nginx的版本号而已\nsudo chown root:wheel /usr/local/Cellar/nginx/1.10.1/bin/nginx    \nsudo chmod u+s /usr/local/Cellar/nginx/1.10.1/bin/nginx\n```\n\n#### 1-2 加入launchctl启动控制\n\n``` bash\nmkdir -p ~/Library/LaunchAgents\ncp /usr/local/opt/nginx/homebrew.mxcl.nginx.plist ~/Library/LaunchAgents/\nlaunchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist\n```\n\n#### 1-3 到这里，nginx基本上是完工了。运行nginx ：\n\n``` bash\nsudo nginx #打开 nginx\nnginx -s reload|reopen|stop|quit  #重新加载配置|重启|停止|退出 nginx\nnginx -t   #测试配置是否有语法错误\n```\n\nOK, nginx就安装好了，可以在浏览器访问了，默认端口为8080，在浏览器输入 `http://localhost:8080/` 就能看到nginx在本计算机搭建的服务器\n\n![nginx安装成功](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/15/16c9411b97ff4bbd~tplv-t2oaga2asx-image.image)\n\n8080是nginx自带的默认网站设置的端口，现在我们自己来创建一个网站，设置端口和映射路径\n\n### 2、自定义网站端口\n\n#### 2-1 执行`vim /usr/local/etc/nginx/nginx.conf` 修改nginx 的配置文件，在最后一行加入：\n\n``` bash\ninclude conf.d/*.conf;\n```\n\n#### 2-2 新建相关文件：\n\n``` bash\n# 新建文件夹\nmkdir /usr/local/etc/nginx/conf.d\n\n# 新建文件\ntouch /usr/local/etc/nginx/conf.d/test.conf\nvim /usr/local/etc/nginx/conf.d/test.conf\n```\n\n#### 2-3 .conf文件示例\n\n```nginx\nserver {\n    listen       80;\n    server_name  www.test.com;\n\n    location / {\n        try_files $uri $uri/ /index.php$is_args$query_string;\n    \troot \"/Users/caishiyin/Sites/huiyu/test\";\n    \tindex index.html index.htm index.php;\n    }\n\n\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   html;\n    }\n\n    location ~ \\.php$ {\n\troot           \"/Users/caishiyin/Sites/huiyu/test\";\n        fastcgi_pass   127.0.0.1:9000;\n        fastcgi_index  indx.php;\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n    }\n\n    location ~ /\\.ht {\n        deny all;\n    }\n\n}\n```\n\n#### 2-4. 绑定自定义域名`sudo vim /etc/hosts`，在文件最后加入一行`127.0.0.1    nginx中配置的域名`\n\n## 四、安装php\n\n### 1、用homebrew安装php\n\nphp 的安装相对nginx和mysql来说，要复杂点，因为brew 默认没有php的包\n\n``` bash\nbrew tap homebrew/dupes\nbrew tap josegonzalez/homebrew-php\n\n# 这里执行brew tap homebrew/dupes会报错，可执行：\ngit -C \"$(brew --repo homebrew/core)\" fetch --unshallow\n```\n\n执行完上面命令后，这个时候才可以安装php,不过php有很多的版本,你可以用：`brew search php` 来查看具体的版本。这里安装7.1版本\n``` bash\nbrew install php71 --with-imap --with-tidy --with-debug --with-mysql --with-fpm\n```\n\n### 2、php的配置\n\n安装成功后，就是对php的配置了，因为mac默认是自带php的，所以我们要把我们安装的php加到环境变量里，而不是继续使用mac自带的php\n\n``` bash\nsudo vim ~/.bash_profile\n# 在这个文件最后添加下列语句：\nexport PATH=\"$(brew --prefix php56)/bin:$PATH\"\n# 保存文件后，source下这个文件，使刚刚添加的环境变量生效\nsource ~/.bash_profile\n```\n\n这个时候，你在命令行里执行 php -v 看到的不再是系统自带的php了，而是我们刚刚安装的php\n\n### 3、加入launchctl启动控制\n\n``` bash\nbashmkdir -p ~/Library/LaunchAgents\ncp /usr/local/opt/php@7.1/homebrew.mxcl.php@7.1.plist ~/Library/LaunchAgents/\nlaunchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.php@7.1.plist\n```\n\n以上，php安装完毕\n\n### 4、php配置文件的存放路径\n\n```bash\n/usr/local/etc/php/7.1/php.ini\n/usr/local/etc/php/7.1/php-fpm.conf\n\n# 修改php-fpm端口：\nvim /usr/local/etc/php/7.1/php-fpm.d/www.conf\n```\n\n## 五、安装composer\n\n### 1、全局安装 运行命令行\n\n``` bash\ncurl -sS https://getcomposer.org/installer | php \n```\n\n### 2、移动安装包到/usr/local/bin\n\n``` bash\nmv composer.phar /usr/local/bin/composer\n```\n\nover.","tagIds":"26,27,20,19","author":"菜头","authorAvatar":"http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif","weight":1,"type":1,"groupTimestamp":"1544191936520","cover":"https://www.pp3.cn/uploads/201406/54545121522.jpg","categoryId":2,"created_at":"2023-11-06T14:15:49.000Z","updated_at":"2023-11-10T14:50:04.000Z","tagList":[{"id":19,"name":"Mysql"},{"id":20,"name":"PHP"},{"id":26,"name":"Nginx"},{"id":27,"name":"Linux"}],"createDate":"2018-12-07"}