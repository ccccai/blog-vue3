{"id":29,"title":"打造vuecli3+element后台管理系统（一）初始化项目","subTitle":"","link":null,"description":"","content":"### 升级vue-cli2到vue-cli3\n``` bash\n# 卸载vue-cli旧版本\nnpm uninstall vue-cli -g\n# 安装新版本\nnpm install -g @vue/cli\n# 查看版本\nnpm vue -V\n```\n\n### 创建项目\n``` bash\nvue create newproject\n```\n接下来就是小孩子做选择题了\n\n- 选择自主配置\n![1](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/16/16c99e11aa215c13~tplv-t2oaga2asx-image.image)\n\n- 选择你要引入的初始化依赖包。咱项目里会用到这几个，按空格选中，再按一下就取消的哈~（这里我用cmd创建项目，没有用git-bash，git-bash在这里不好使，不支持选中:expressionless:。你也可以用vscode的终端来创建。）\n![2](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/16/16c99e1c34a23ee2~tplv-t2oaga2asx-image.image)\n\n- 路由要不要使用history模式。no。\n![3](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/16/16c99e47e244b243~tplv-t2oaga2asx-image.image)\n\n- 预编译css语法选择哪一个，因为咱用的是elementUI，所以选择sass\n![4](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/16/16c99e8c5fafdb62~tplv-t2oaga2asx-image.image)\n\n- 项目代码风格规范，个人习惯问题，我习惯使用ESlint + Prettier\n![5](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/16/16c9a35879aecd63~tplv-t2oaga2asx-image.image)\n\n- 保存时自动检测代码是否合乎规范or在提交代码的时候一并格式化代码\n![6](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/16/16c9a3d8084838a3~tplv-t2oaga2asx-image.image)\n\n- 配置文件的保存方式，我选择保存在package.json里\n![7](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/16/16c9a3efd840833d~tplv-t2oaga2asx-image.image)\n\n- 是不是要保存你上面的所有设置，下次创建项目默认按照这些选择来生成项目。no。\n![8](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/16/16c9a3fecd7b73fd~tplv-t2oaga2asx-image.image)\n\n### 目录结构\n```\n.\n│  .gitignore <!-- git忽略文件配置文件 -->\n│  babel.config.js <!-- babel配置文件 -->\n│  package-lock.json <!-- 用以记录当前状态下实际安装的各个npm package的具体来源和版本号 -->\n│  package.json <!-- 定义了这个项目所需要的各种模块,以及项目的配置信息(比如名称、版本、许可证等元数据) -->\n│  README.md <!-- 项目介绍文件 -->\n│  \n├─node_modules <!-- 项目依赖包 -->\n├─public <!-- 放不会变动的文件（相当于vue-cli2.x中的static） -->\n│      favicon.ico <!-- 项目图标 -->\n│      index.html <!-- 设置项目的一些meta头信息，提供用于挂载 vue 节点。 -->\n│      \n└─src <!-- 存放项目源码及需要引用的资源文件。 -->\n    │  App.vue <!-- 根组件 -->\n    │  main.js <!-- 入口文件 -->\n    │  router.js <!-- 路由文件 -->\n    │  store.js <!-- vuex仓库文件 -->\n    │  \n    ├─assets <!-- 静态资源文件，放可能会变动的文件 -->\n    │      logo.png\n    │      \n    ├─components <!-- 公共组件 -->\n    │      HelloWorld.vue\n    │      \n    └─views <!-- 页面 -->\n            About.vue\n            Home.vue\n            \n\n```\n\n### 简单将vue-admin-template整合进项目\n> 经过以上步骤，恭喜你，你的vuecli3项目已经初步搭建完成~~ 撒花 ~~\nvue-admin-template里头的很多东西对我来说，是多余的，所以我就选择性的将我用的到的地方整合进项目里，我就不做详细解释了噢，捡整合中有点小困难的地方讲一讲。放上项目git地址，有需要的同学可以clone一下看看整合效果。\n\n- [x] [一个基于vuecli3和vue-admin-template改造的响应式后台管理系统](https://github.com/ccccai/vuecli3-ele-admin-template)\n\n#### 新建自己的ESlint配置文件\n> 这个代码风格规范的问题，可以根据自己的习惯或者是公司协作开发的代码规范去修改。删除package.json下的eslintConfig配置信息，在根目录下新建.eslintrc.js文件，自定义代码规范。贴一下我习惯的规范配置：\n\n``` javascript\nmodule.exports = {\n  root: true,\n  parserOptions: {\n    parser: 'babel-eslint',\n    sourceType: 'module'\n  },\n  env: {\n    browser: true,\n    node: true,\n    es6: true,\n  },\n  extends: ['plugin:vue/recommended', 'eslint:recommended'],\n\n  // add your custom rules here\n  //it is base on https://github.com/vuejs/eslint-config-vue\n  rules: {\n    \"vue/max-attributes-per-line\": [2, {\n      \"singleline\": 10,\n      \"multiline\": {\n        \"max\": 1,\n        \"allowFirstLine\": false\n      }\n    }],\n    \"vue/singleline-html-element-content-newline\": \"off\",\n    \"vue/multiline-html-element-content-newline\":\"off\",\n    \"vue/name-property-casing\": [\"error\", \"PascalCase\"],\n    \"vue/no-v-html\": \"off\",\n    'accessor-pairs': 2,\n    'arrow-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'block-spacing': [2, 'always'],\n    'brace-style': [2, '1tbs', {\n      'allowSingleLine': true\n    }],\n    'camelcase': [0, {\n      'properties': 'always'\n    }],\n    'comma-dangle': [2, 'never'],\n    'comma-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'comma-style': [2, 'last'],\n    'constructor-super': 2,\n    'curly': [2, 'multi-line'],\n    'dot-location': [2, 'property'],\n    'eol-last': 2,\n    'eqeqeq': [\"error\", \"always\", {\"null\": \"ignore\"}],\n    'generator-star-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'handle-callback-err': [2, '^(err|error)$'],\n    'indent': [2, 2, {\n      'SwitchCase': 1\n    }],\n    'jsx-quotes': [2, 'prefer-single'],\n    'key-spacing': [2, {\n      'beforeColon': false,\n      'afterColon': true\n    }],\n    'keyword-spacing': [2, {\n      'before': true,\n      'after': true\n    }],\n    'new-cap': [2, {\n      'newIsCap': true,\n      'capIsNew': false\n    }],\n    'new-parens': 2,\n    'no-array-constructor': 2,\n    'no-caller': 2,\n    'no-console': 'off',\n    'no-class-assign': 2,\n    'no-cond-assign': 2,\n    'no-const-assign': 2,\n    'no-control-regex': 0,\n    'no-delete-var': 2,\n    'no-dupe-args': 2,\n    'no-dupe-class-members': 2,\n    'no-dupe-keys': 2,\n    'no-duplicate-case': 2,\n    'no-empty-character-class': 2,\n    'no-empty-pattern': 2,\n    'no-eval': 2,\n    'no-ex-assign': 2,\n    'no-extend-native': 2,\n    'no-extra-bind': 2,\n    'no-extra-boolean-cast': 2,\n    'no-extra-parens': [2, 'functions'],\n    'no-fallthrough': 2,\n    'no-floating-decimal': 2,\n    'no-func-assign': 2,\n    'no-implied-eval': 2,\n    'no-inner-declarations': [2, 'functions'],\n    'no-invalid-regexp': 2,\n    'no-irregular-whitespace': 2,\n    'no-iterator': 2,\n    'no-label-var': 2,\n    'no-labels': [2, {\n      'allowLoop': false,\n      'allowSwitch': false\n    }],\n    'no-lone-blocks': 2,\n    'no-mixed-spaces-and-tabs': 2,\n    'no-multi-spaces': 2,\n    'no-multi-str': 2,\n    'no-multiple-empty-lines': [2, {\n      'max': 1\n    }],\n    'no-native-reassign': 2,\n    'no-negated-in-lhs': 2,\n    'no-new-object': 2,\n    'no-new-require': 2,\n    'no-new-symbol': 2,\n    'no-new-wrappers': 2,\n    'no-obj-calls': 2,\n    'no-octal': 2,\n    'no-octal-escape': 2,\n    'no-path-concat': 2,\n    'no-proto': 2,\n    'no-redeclare': 2,\n    'no-regex-spaces': 2,\n    'no-return-assign': [2, 'except-parens'],\n    'no-self-assign': 2,\n    'no-self-compare': 2,\n    'no-sequences': 2,\n    'no-shadow-restricted-names': 2,\n    'no-spaced-func': 2,\n    'no-sparse-arrays': 2,\n    'no-this-before-super': 2,\n    'no-throw-literal': 2,\n    'no-trailing-spaces': 2,\n    'no-undef': 2,\n    'no-undef-init': 2,\n    'no-unexpected-multiline': 2,\n    'no-unmodified-loop-condition': 2,\n    'no-unneeded-ternary': [2, {\n      'defaultAssignment': false\n    }],\n    'no-unreachable': 2,\n    'no-unsafe-finally': 2,\n    'no-unused-vars': [2, {\n      'vars': 'all',\n      'args': 'none'\n    }],\n    'no-useless-call': 2,\n    'no-useless-computed-key': 2,\n    'no-useless-constructor': 2,\n    'no-useless-escape': 0,\n    'no-whitespace-before-property': 2,\n    'no-with': 2,\n    'one-var': [2, {\n      'initialized': 'never'\n    }],\n    'operator-linebreak': [2, 'after', {\n      'overrides': {\n        '?': 'before',\n        ':': 'before'\n      }\n    }],\n    'padded-blocks': [2, 'never'],\n    'quotes': [2, 'single', {\n      'avoidEscape': true,\n      'allowTemplateLiterals': true\n    }],\n    'semi': [2, 'never'],\n    'semi-spacing': [2, {\n      'before': false,\n      'after': true\n    }],\n    'space-before-blocks': [2, 'always'],\n    'space-before-function-paren': [2, 'never'],\n    'space-in-parens': [2, 'never'],\n    'space-infix-ops': 2,\n    'space-unary-ops': [2, {\n      'words': true,\n      'nonwords': false\n    }],\n    'spaced-comment': [2, 'always', {\n      'markers': ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ',']\n    }],\n    'template-curly-spacing': [2, 'never'],\n    'use-isnan': 2,\n    'valid-typeof': 2,\n    'wrap-iife': [2, 'any'],\n    'yield-star-spacing': [2, 'both'],\n    'yoda': [2, 'never'],\n    'prefer-const': 2,\n    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0,\n    'object-curly-spacing': [2, 'always', {\n      objectsInObjects: false\n    }],\n    'array-bracket-spacing': [2, 'never']\n  }\n}\n```\n\n#### 在项目中使用svg\n\n##### 将icons文件夹引入项目：\n![icons](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/17/16c9d6afd72ec00b~tplv-t2oaga2asx-image.image)\n\n##### 引入svg组件\n![svg组件](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/17/16c9d72d24c794d2~tplv-t2oaga2asx-image.image)\n\n##### 在配置文件配置一些东西，让项目可以使用svg。\n在根目录下新建vue.config.js：\n\n``` javascript\nconst path = require('path')\n\nfunction resolve(dir) {\n  return path.join(__dirname, dir)\n}\n\nmodule.exports = {\n  assetsDir: 'assets', // 静态资源文件夹\n  devServer: {\n    port: 9533 // 端口号\n  },\n  chainWebpack: config => {\n    config.module\n      .rule('svg')\n      .exclude.add(resolve('src/icons'))\n      .end()\n\n    config.module\n      .rule('icons')\n      .test(/\\.svg$/)\n      .include.add(resolve('src/icons'))\n      .end()\n      .use('svg-sprite-loader')\n      .loader('svg-sprite-loader')\n      .options({\n        symbolId: 'icon-[name]'\n      })\n  }\n}\n```\n\n#### 按照自己的需要选择性的将vue-admin-template中的东西copy到项目中\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/17/16c9d7b5a33aa384~tplv-t2oaga2asx-image.image)\n\n##### 在入口文件引入各个依赖\n``` javascript\n// main.js\nimport Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementUI from 'element-ui'\nimport locale from 'element-ui/lib/locale/lang/zh-CN' // lang i18n\nimport 'element-ui/lib/theme-chalk/index.css'\nimport 'normalize.css/normalize.css' // A modern alternative to CSS resets\nimport '@/styles/index.scss' // global css\nimport 'element-ui/lib/theme-chalk/index.css'\nimport '@/icons' // icon\n\nVue.config.productionTip = false\nVue.use(ElementUI, {\n  locale\n})\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n```","tagIds":"4,5,6,7,10,11,12","author":"菜头","authorAvatar":"http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif","weight":99,"type":1,"groupTimestamp":"1562621244440","cover":"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/25/16cc4ae1163d42a3~tplv-t2oaga2asx-jj:216:144:0:0:q75.avis","categoryId":1,"created_at":"2023-11-22T21:28:16.000Z","updated_at":"2023-11-22T21:48:47.000Z","tagList":[{"id":4,"name":"CSS"},{"id":5,"name":"ECMAScript"},{"id":6,"name":"Git"},{"id":7,"name":"LESS"},{"id":10,"name":"HTML"},{"id":11,"name":"JavaScript"},{"id":12,"name":"ES6"}],"createDate":"2019-07-09"}