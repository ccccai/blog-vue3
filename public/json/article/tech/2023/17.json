{"id":17,"title":"在本地环境上用pm2跑koa+ts项目","subTitle":"记录遇到的坑","link":null,"description":"最近在用node和ts来写前后端分离的项目，云服务器到期且并没有续费的打算，所以打算在本地环境捣鼓。网上的教程大多都是指导如何在云服务器上部署koa并用pm2守护进程。自己依葫芦画瓢在本地整了一套，故记录一下。","content":"## 一、简单介绍PM2\n\n开始之前先了解一下什么是pm2，这次认认真真逐字逐句的读了下概念，之前大致知道这是一个管理node进程的工具，把它笼统的归类于与phpstydy、nginx类似的工具，但是其实并不完全一致。\n\npm2一般来说是用于我们的生产环境，也就是云服务器上的node进程管理工具（废话），它不仅能进行进程守护，同时也支持性能监控、负载均衡等的功能，并且还可以使用命令来取查看我们node进程的状态，小白友好上手简单。我之前错误的认为它和phpstydy、nginx类似，更贴切的来讲，它其实更像是Linux的进程管理工具Supervisor或者Forever。\n\n## 二、我用它来解决什么问题？\n\n很简单，我主要是用来解决本地开发的时候，不用每次得用命令行工具cd到项目目录用命令去启动接口服务，我需要项目接口在我需要的时候一直运行着，且不会因为误触命令行工具关闭按钮时而挂掉服务。\n\n同理，云服务器其实就可以看成一部虚拟的计算机，在服务器上用pm2，其实也是解决的一样的问题。\n\n## 三、pm2的特性\n\n* **pm2在后台运行**。例如`node app.js`这样的命令，是需要一直在前台运行，容易因为代码错误或者是命令行工具的问题导致中断，不稳定。pm2在后台运行，也支持将错误用log文件输出的方式记录。\n* **0 秒停机重载**。它能立即重新启动应用的所有进程并在重新加载代码后将请求，路由到新的进程，这意味着在应用维护升级的时候是不需要停机的，node服务不会中断，但这种处理方式不可避免的会造成一些请求失败和丢失。\n* **内建负载均衡**。使用node cluster集群模块，可以自由的设置每次启动的进程的个数，如果设置为0，意味着它会根据服务器CPU的使用情况来灵活的设置进程的数量。\n* **停止不稳定的进程**。可以避免死循环。\n* **控制台监测**。可以在控制台实时监测运行情况。\n* **多平台支持**。支持各大主流平台如Linux、MacOs、Windows等\n\n## 四、安装和使用\n* 安装\n   ```bash\n   # 全局安装\n   npm install -g pm2\n   ```\n   \n\n* 启动项目\n  ```bash\n  # 1、首先cd到项目的根目录下，也就是项目入口文件同级的目录下\n  # 2、执行指定应用 pm2 start [配置文件/入口文件] --name [项目名字]\n  pm2 start app.ts --name web_blog\n  ```\n  \n* 常用命令\n  ```bash\n  # 查看当前进程\n  pm2 ls\n  # 停止应用进程\n  pm2 stop\n  # 重启进程\n  pm2 restart [项目名字]\n  # 杀掉所有应用的进程\n  pm2 kill\n  # 删除应用后台服务\n  pm2 delete\n  ```\n  \n## 五、在项目koa中的配置\n\n在koa项目中使用pm2，需要进行一些配置\n\n### 1、npm一些必须得包\n\n```bash\n# 安装pm2\nnpm install --save pm2\n# 安装ts支持，使我们可以直接运行ts文件\nnpm install --save-dev ts-node typescript\n```\n\n### 2、创建配置文件\n\n```bash\n# 创建配置文件pm2.json\ntouch pm2.json\n```\n\n#### pm2.json\n\n```json\n{\n    \"apps\": [\n        {\n            \"name\": \"production\",\n            \"script\": \"./app.ts\",\n            \"exec_mode\": \"cluster\",\n            \"instances\": 1,\n            \"cron_restart\": \"0 03 * * *\",\n            \"autorestart\": true,\n            \"watch\": false,\n            \"min_uptime\": \"200s\",\n            \"max_restarts\": 10,\n            \"ignore_watch\": [\n                \"node_modules\",\n                \".idea\",\n                \"log\"\n            ],\n            \"max_memory_restart\": \"100M\",\n            \"restart_delay\": \"3000\",\n            \"env\": {\n                \"NODE_ENV\": \"production\"\n            },\n            \"error_file\": \"./log/app-err.log\",\n            \"out_file\": \"./log/app-out.log\",\n            \"merge_logs\": true,\n            \"log_date_format\": \"YYYY-MM-DD HH:mm:ss\"\n        }\n    ]\n}\n```\n\n### 3、在package.json文件配置命令\n\n```json\n    \"scripts\": {\n        \"prod\": \"pm2 start config/pm2.json --only production\",\n        \"start\": \"pm2 start app.ts --name web_blog\",\n        \"stop\": \"pm2 stop config/pm2.config.ts\",\n        \"delete\": \"pm2 delete config/pm2.config.ts\",\n        \"list\": \"pm2 list\",\n        \"kill\": \"pm2 kill\"\n    }\n```\n\n至此，在项目根目录下运行`npm run prod`便可启动项目\n\n![image](https://img-blog.csdnimg.cn/22fafe113a164e2ea6a140d241de3b4b.png)\n\n## 六、遇到的一些问题\n### 1、运行npm run prod报错。\n\n![image](https://img-blog.csdnimg.cn/af7802f8959547d695983421eaaaab9e.png)\n\n原因：没有指定ts-node目录，故找不到模块来支持执行ts文件。\n解决：为项目指定ts-node目录\n\n```json\n{\n    \"apps\": [\n        {\n            // 前面还有一点...\n            \"interpreter\": \"./node_modules/.bin/ts-node\",\n            // 后面还有很多...\n        }\n    ]\n}\n```\n\n暂时没有遇到其他问题，待续...","tagIds":"13,17,16,36","author":"菜头","authorAvatar":"http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif","weight":78,"type":1,"groupTimestamp":"1694703444833","cover":"https://www.pmzwei.com/images/125x54xpm2_logo_farbig_cmyk_131105.jpg.pagespeed.ic.nuSnMCBa49.jpg","categoryId":4,"created_at":"2023-11-09T15:04:06.000Z","updated_at":"2023-11-24T05:47:52.000Z","tagList":[{"id":13,"name":"NodeJS"},{"id":16,"name":"TypeScript"},{"id":17,"name":"Koa"},{"id":36,"name":"pm2"}],"createDate":"2023-09-14"}