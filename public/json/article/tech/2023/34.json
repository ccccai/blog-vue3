{"id":34,"title":"web调试之Whistle","subTitle":"调试好帮手","link":null,"description":"Whistle是一个Node实现的跨平台Web调试代理工具。它的作用可以理解为用Node开一个代理服务器，将我们需要调试的设备代理到whistle后，由whistle进行代理请求。同时whistle支持类似于hosts的转发规则，我们可以通过正则或者内置的一些指令对我们需要进行代理的域名进行转发，添加插件等。","content":"## Whistle\n\n### [官方文档](http://wproxy.org/whistle/)\n\n是基于 Node 实现的跨平台抓包调试代理工具，有以下基本功能：\n\n1）查看 HTTP、HTTPS、HTTP2、WebSocket、TCP 请求响应数据\n\n2）修改 HTTP、HTTPS、HTTP2、WebSocket、TCP 请求响应数据\n\n   * 修改请求 url、方法、头部、内容等\n   * 修改响应状态码、头部、内容，并支持本地替换等\n   * 修改 WebSocket 和 TCP 收发的帧数据\n\n3）设置 hosts（支持 IPv6）、http-proxy、https-proxy、socks\n\n4）作为HTTP代理或反向代理\n\n5）集成常用的 web 调试工具，如 weinre 和 log 等\n\n6）支持用 Node 编写插件扩展\n\nwhistle基本上覆盖了所有抓包调试代理可以实现的功能，且所有操作都可以通过类似配置hosts的方式实现。\n类似的工具有Windows平台上的[Fiddler](http://www.telerik.com/fiddler/)；\n\n### 1、安装\n\nwhistle安装过程需要以下步骤（**缺一不可**）：\n\n- 安装Node\n- 安装whistle\n- 启动whistle\n- 配置代理\n- 安装根证书\n\n上述步骤的详细操作分别参见如下文档：\n\n1） [安装启动whistle](http://wproxy.org/whistle/install.html)\n\n2） [安装whistle根证书](<http://wproxy.org/whistle/webui/https.html>)\n\n### 2、基本命令\n\n启动、停止、重启whistle的命令行命令如下：\n\n```bash\n# 查看whistle的所有命令行操作\nw2 --help\n# 启动\nw2 start\n# 停止\nw2 stop\n# 重启\nw2 restart\n```\n\n### 3、配置代理\n\n*   配置信息：默认代理本地127.0.0.1，端口8899。\n*   使用代理\n\n    1）全局代理，直接配置系统代理；\n\n    2）浏览器代理：安装浏览器代理插件[SwitchyOmega](https://chrome.google.com/webstore/detail/padekgcemlokbadohgkifijomclgjgif) (推荐)；\n    \n    <img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/21baf72a70924e62a1d018f82377d738~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1884&h=1130&s=614501&e=png&b=fdfdfd\" alt=\"image-20210813051114187\" style=\"zoom: 33%;\">\n\n    3）移动端配置代理（以ios为例）\n    \n    <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1ab8c748753841dfa7897b72c5141457~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2330&#x26;h=1382&#x26;s=149889&#x26;e=jpg&#x26;b=fcfcfc\" alt=\"img\" style=\"zoom: 33%;\">\n    \n    如果连接的是Wi-Fi代理不成功，原因是不能和电脑本机处于相同ip，同一个iP不能互访。切换Wi-Fi即可。\n    \n    4）其他：微信开发工具使用代理\n    \n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4d9098df8cc6486d9ab67329462c4653~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=446&h=414&s=213608&e=png&b=393d3f\" alt=\"image-20210813041514908\" style=\"width:250px\">\n    \n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/951d381438834736b781894f4a7a89ac~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1360&h=564&s=76127&e=png&b=343434\" alt=\"image-20210813041622230\" style=\"zoom: 50%;\">\n\n### 4、创建规则\n\n打开`http://127.0.0.0:8899`，通过右键菜单或页面上方菜单栏的`Create` 按钮创建一个分组\n\n1）设置hosts\n\n指定 [www.ifeng.com](http://www.ifeng.com/) 的ip和端口，把请求转发到本地8080端口，这个在平时开发中可以用来去掉url中的端口号:\n\n```bash\n# www.ifeng.com 127.0.0.1\nwww.ifeng.com 127.0.0.1:8080\n# or\n127.0.0.1:8080 www.ifeng.com\n```\n\n也可以用某个域名的ip设置hosts\n\n```bash\nwww.ifeng.com host://www.qq.com:8080\n# or\nhost://www.qq.com:8080 www.ifeng.com\n```\n\n2）本地替换\n\n平时开发中经常会用到这个功能，把响应替换成本地文件内容。\n\n```bash\n# Mac、Linux\nwww.ifeng.com file:///User/username/test\n# or www.ifeng.com file:///User/username/test/index.html\n\n# Windows的路径分隔符可以用 \\ 或者 /\nwww.ifeng.com file://E:\\xx\\test\n# or www.ifeng.com file://E:\\xx\\test\\index.html\n```\n\n`http://www.ifeng.com`会先尝试加载`/User/username/test`这个文件，如果不存在，则会加载`/User/username/test/index.html`，如果没有对应的文件则返回404。\n\n3）请求转发\n\n[www.ifeng.com](http://www.ifeng.com/) 域名下的请求都替换成对应的`www.aliexpress.com`域名\n\n```bash\nwww.ifeng.com www.aliexpress.com\n```\n\n4）注入html、js、css\n\nwhistle会自动根据响应内容的类型，判断是否注入相应的文本及如何注入(是否要用标签包裹起来)。\n    \n```bash\n# Mac、Linux\nwww.ifeng.com html:///User/xxx/test/test.html\nwww.ifeng.com js:///User/xxx/test/test.js\nwww.ifeng.com css:///User/xxx/test/test.css\n         \n# Windows的路径分隔符可以用`\\`和`/`\nwww.ifeng.com html://E:\\xx\\test\\test.html\nwww.ifeng.com js://E:\\xx\\test\\test.js\nwww.ifeng.com css://E:\\xx\\test\\test.css\n```\n    \n所有`www.ifeng.com`域名下的请求，whistle都会根据响应类型，将处理好的文本注入到响应内容里面，如是html请求，js和css会分别自动加上`script`和`style`标签后追加到内容后面。\n\n5）调试远程页面\n\n利用whistle提供的[weinre](rules/weinre.html)和[log](rules/log.html)两个协议，可以实现修改远程页面DOM结构及自动捕获页面js错误及console打印的信息，还可以在页面顶部或js文件底部注入指定的脚步调试页面信息。\n\n使用whistle的功能前，先把要相应的系统代理或浏览器代理指向whistle，如何设置可以参考：[安装启动](install.html)\n\nweinre：\n    \n```bash\nwww.ifeng.com weinre://test\n```\n    \n配置后保存，打开\\[[www.ifeng.com\\](http://](http://www.ifeng.com]\\(http://) /)，鼠标放在菜单栏的weinre按钮上会显示一个列表，并点击其中的`test`项打开weinre的调试页面选择对应的url切换到Elements即可。\n\nlog:\n    \n```bash\nwww.ifeng.com log://{test.js}\n```\n\n配置后保存，鼠标放在菜单栏的Values按钮上会显示一个列表，并点击其中的`test.js`项，whistle会自动在Values上建立一个test.js分组，在里面填入`console.log(1, 2, 3, {a: 123})`保存，打开Network -> 右侧Log -> Console，再打开 [www.ifeng.com](http://www.ifeng.com/) ，即可看到Log下面的Page输出的信息。\n\n6）Mock 数据\n\n最简单的 Mock 可以针对一个 pattern 替换响应体和响应码等等。如下所示：\n\n ```bash\n# Rules\n# 将 www.mock.com/api/user 接口的响应内容替换为 user 中的内容，并将响应码替换成 200\n# 其中，user 在 Values 面板中保存\nwww.mock.com/api/user resBody://{user} replaceStatus://200\n```\n\n设定请求的响应延时，只需要再加一个 `resDelay` 的 operatorURI：\n\n```bash\n# 10s 后返回\nwww.mock.com/api/user resBody://{user} replaceStatus://200 resDelay://10000\n```\n\n可能有时候会有更加复杂的 Mock 需求，比如几个接口之间互相有关联，需要跑通一个完整的链路可能需要一些定制的逻辑。Whistle 提供了很多插件，其中有一个能够提供非常强大 Mock 能力的插件—— [whistle.vase](https://link.zhihu.com/?target=https%3A//github.com/whistle-plugins/whistle.vase) 。使用这个插件，我们甚至可以直接写 JS 代码，根据我们的具体请求参数作出各种具体逻辑。\n\n```bash\nnpm i -g whistle.vase\n```\n\n在安装完之后，就可以在 Plugins 中对其进行配置了。\n\n\n### 5、捕获https\n\nwhistle支持抓取https 请求，具体配置方法参见：[HTTPS拦截](http://wproxy.org/whistle/webui/https.html)\n\n### 6、真机调试\n\n调试移动页面有两种方式，一种是Weinre，另外一种是log日志输出。\n\n*   `weinre`可以用于调试远程页面。\n\n```bash\nwww.midea.cn weinre://midea\n```\n\n当用手机打开配置的页面时，在顶部操作栏的**Weinre**栏，在下拉列表就可以找到设置的weinre id的，点击会新开一个weinre调试页面，就可以开始使用weinre。\n\n![image-20210813050538755.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/14f9127bd4684cc198b9176f7f314b0b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1906\\&h=488\\&s=157172\\&e=png\\&b=08213e)\n\n*   log\n\n```bash\nwww.midea.cn log://{log.js}\n```\n\n通过自动监控 html 页面或 js 文件出现的错误及 console.xxx 打印出来的信息，会自动在 whistle 界面的 log 模块显示这些错误及信息日志。\n\n![image-20210813050759582.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3eee89305d7046d8a6322ce2c4dff902~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1346\\&h=348\\&s=80855\\&e=png\\&b=faf2f2)\n","tagIds":"38","author":"菜头","authorAvatar":"http://3.bp.blogspot.com/-powJHBZ_dI0/Uuax5aG2dQI/AAAAAAAAHjY/BrKvCsBzaCU/s1600/minions-gifs-animados-imagens-que-se-mexem.gif","weight":88,"type":1,"groupTimestamp":"1674016650744","cover":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/87d09501fcea4e2380db1818c428b8c6~tplv-k3u1fbpfcp-jj:108:72:0:0:q75.avis#?w=210&h=201&s=11972&e=jpg&b=fbfbfb","categoryId":1,"created_at":"2023-11-24T05:30:11.000Z","updated_at":"2023-11-24T05:34:10.000Z","tagList":[{"id":38,"name":"调试"}],"createDate":"2023-01-18"}